package org.micompania.nomina.vista;

import java.text.NumberFormat;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import org.micompania.nomina.controlador.NominaControlador;
import org.micompania.nomina.modelo.Salario;
import org.micompania.nomina.util.NominaException;
import org.micompania.nomina.util.Utilidades;
import org.micompania.nomina.vista.modelos.ModeloTablaSalario;

/**
 * @author GTX1050
 */
public class VentanaSalario extends javax.swing.JFrame {

    private NominaControlador nomina;
    private Salario salarioSeleccionado;
    private String codigoAnterior;
    private boolean estaEnModoEdicion;

    public VentanaSalario(NominaControlador nominaControlador) {
        this.nomina = nominaControlador;
        initComponents();
        estaEnModoEdicion = false;
        this.ponerModoEdicion();
        this.cargarDatosTabla();
    }

    public VentanaSalario() {
        initComponents();
        NumberFormat nf = NumberFormat.getCurrencyInstance();
        txtBaseSalarial = new JFormattedTextField(nf);
        txtBaseSalarial.setColumns(10);
        estaEnModoEdicion = false;
        this.ponerModoEdicion();
        this.cargarDatosTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        spnGrado = new javax.swing.JSpinner();
        lblGrado = new javax.swing.JLabel();
        lblBaseSalarial = new javax.swing.JLabel();
        txtBaseSalarial = new javax.swing.JFormattedTextField();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelarEdicion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSalarios = new javax.swing.JTable();
        btnCerrar = new javax.swing.JButton();

        setTitle("Salarios");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("SALARIOS");

        lblCodigo.setText("Código");

        lblGrado.setText("Grado");

        lblBaseSalarial.setText("Base Salarial");

        btnAgregar.setText("Agregar");
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarMouseClicked(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarMouseClicked(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
        });

        btnCancelarEdicion.setText("Cancelar Edición");
        btnCancelarEdicion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarEdicionMouseClicked(evt);
            }
        });

        tblSalarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSalariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSalarios);

        btnCerrar.setText("Cerrar");
        btnCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCerrarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(btnAgregar)
                                    .addGap(18, 18, 18))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblCodigo)
                                        .addComponent(lblGrado)
                                        .addComponent(lblBaseSalarial))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(spnGrado, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtBaseSalarial, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(btnModificar)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnEliminar)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnCancelarEdicion)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jLabel1)))
                .addGap(110, 110, 110))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(btnCerrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCodigo)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spnGrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGrado))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBaseSalarial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBaseSalarial))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addComponent(btnCancelarEdicion))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCerrar)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseClicked
        this.agregar();
    }//GEN-LAST:event_btnAgregarMouseClicked

    private void btnCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCerrarMouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_btnCerrarMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.limpiarComponentes();
    }//GEN-LAST:event_formWindowClosing

    private void btnCancelarEdicionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarEdicionMouseClicked
        estaEnModoEdicion = false;
        this.ponerModoEdicion();
    }//GEN-LAST:event_btnCancelarEdicionMouseClicked

    private void btnModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseClicked
        this.modificar();
    }//GEN-LAST:event_btnModificarMouseClicked

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        this.eliminar();
    }//GEN-LAST:event_btnEliminarMouseClicked

    private void tblSalariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSalariosMouseClicked
        if (evt.getClickCount() > 1) {
            JTable tabla1 = (JTable) evt.getSource();
            this.codigoAnterior = (String) tabla1.getModel().getValueAt(tabla1.getSelectedRow(), 0);
            try {
                salarioSeleccionado = this.nomina.obtenerSalarioPorCodigo(this.codigoAnterior);
            } catch (NominaException ex) {
                Utilidades.mostrarMensajeError(this, "No se pudo obtener el salario seleccionado");
            }
            estaEnModoEdicion = true;
            ponerModoEdicion();
        }
    }//GEN-LAST:event_tblSalariosMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelarEdicion;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBaseSalarial;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblGrado;
    private javax.swing.JSpinner spnGrado;
    private javax.swing.JTable tblSalarios;
    private javax.swing.JFormattedTextField txtBaseSalarial;
    private javax.swing.JTextField txtCodigo;
    // End of variables declaration//GEN-END:variables

    public NominaControlador getNominaControlador() {
        return nomina;
    }

    public void setNominaControlador(NominaControlador nominaControlador) {
        this.nomina = nominaControlador;
    }

    private void agregar() {
        String codigo = txtCodigo.getText();
        Long base = ((Integer) (spnGrado.getValue())).longValue();
        Double baseSalario = Double.valueOf(txtBaseSalarial.getText());
        Salario sl = new Salario(codigo, base, baseSalario);
        try {
            this.nomina.agregarSalario(sl);
            spnGrado.setValue(0);
            Utilidades.limpiarComponenteTexto(txtCodigo, txtBaseSalarial);
            this.cargarDatosTabla();
            Utilidades.mostrarMensajeInfo(this, "Se agregó correctamente el Salario");
        } catch (NominaException ex) {
            Utilidades.mostrarMensajeError(this, ex.getMessage());
        }
    }

    private void modificar() {
        int rm = JOptionPane.showConfirmDialog(this, "Desea modificar los datos?",
                "Modificar Salario", JOptionPane.OK_CANCEL_OPTION);
        if (rm == JOptionPane.OK_OPTION) {
            try {
                this.nomina.actualizarSalario(salarioSeleccionado, this.codigoAnterior);
                estaEnModoEdicion = false;
                this.ponerModoEdicion();
                this.limpiarComponentes();
                this.cargarDatosTabla();
                this.tblSalarios.revalidate();
                Utilidades.mostrarMensajeInfo(this, "Se modificó la información");
            } catch (NominaException ex) {
                Utilidades.mostrarMensajeError(this, ex.getMessage());
            }
        }
    }

    private void eliminar() {
        int rm = JOptionPane.showConfirmDialog(this, "¿Desea eliminar el Salario seleccionado?",
                "Eliminar Salario", JOptionPane.OK_CANCEL_OPTION);
        if (rm == JOptionPane.OK_OPTION) {
            try {
                this.nomina.eliminarSalario(salarioSeleccionado);
                estaEnModoEdicion = false;
                this.ponerModoEdicion();
                this.limpiarComponentes();
                this.cargarDatosTabla();
                Utilidades.mostrarMensajeInfo(this, "Se eliminó la información");
            } catch (NominaException ex) {
                Utilidades.mostrarMensajeError(this, ex.getMessage());
            }
        }
    }

    private void cargarDatosTabla() {
        try {
            ModeloTablaSalario model = new ModeloTablaSalario(nomina.obtenerTodosLosSalarios());
            tblSalarios.setModel(model);
            tblSalarios.revalidate();
        } catch (NominaException ex) {
            Utilidades.mostrarMensajeError(this, ex.getMessage());
        }

    }

    private void ponerModoEdicion() {
        btnAgregar.setVisible(!estaEnModoEdicion);
        btnCancelarEdicion.setVisible(estaEnModoEdicion);
        btnEliminar.setVisible(estaEnModoEdicion);
        btnModificar.setVisible(estaEnModoEdicion);
        if (estaEnModoEdicion) {
            if (salarioSeleccionado != null) {
                txtCodigo.setText(salarioSeleccionado.getCodigo());
                spnGrado.setValue(Integer.valueOf(salarioSeleccionado.getGrado().toString()));
                txtBaseSalarial.setText(salarioSeleccionado.getBase().toString());
            }
        } else {
            this.limpiarComponentes();
        }
    }

    private void limpiarComponentes() {
        this.txtCodigo.setText("");
        this.txtBaseSalarial.setText("");
        this.spnGrado.setValue(0);
    }

    public Salario getSalarioSeleccionado() {
        return salarioSeleccionado;
    }

    public void setSalarioSeleccionado(Salario salarioSeleccionado) {
        this.salarioSeleccionado = salarioSeleccionado;
    }

    public boolean isEstaEnModoEdicion() {
        return estaEnModoEdicion;
    }

    public void setEstaEnModoEdicion(boolean estaEnModoEdicion) {
        this.estaEnModoEdicion = estaEnModoEdicion;
    }

    /**
     * @return the codigoAnterior
     */
    public String getCodigoAnterior() {
        return codigoAnterior;
    }

    /**
     * @param codigoAnterior the codigoAnterior to set
     */
    public void setCodigoAnterior(String codigoAnterior) {
        this.codigoAnterior = codigoAnterior;
    }

}
